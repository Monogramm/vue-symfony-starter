version: "2.4"

networks:
  app_external_network:
  app_internal_network:
    internal: true
  #app_elk_network:

services:
  app_backend:
    build:
      context: ./
      dockerfile: ${DOCKERFILE_PATH}
      args:
        - APP_PATH=./app
        - APP_PUBLIC_URL=${APP_PUBLIC_URL}
        - WEBSITE_PUBLIC_URL=${APP_PUBLIC_URL}
        - EXPORT_TESTS_RESULTS=true
      #  - VERSION=${TAG}
      #  - VCS_REF=${VCS_REF}
      #  - BUILD_DATE=${BUILD_DATE}
    image: ${IMAGE_NAME}
    container_name: app_backend
    #restart: always
    healthcheck:
      test: curl --fail http://localhost:80/health | grep -q -e 'UP' || exit 1
      interval: 60s
      timeout: 10s
      #start_period: 5s
      retries: 4
    ports:
      - "8080:80"
    depends_on:
      app_db:
        condition: service_healthy
      app_rabbitmq:
        condition: service_started
      app_mailer:
        condition: service_started
      app_ldap:
        condition: service_started
    links:
      - app_db:database
      - app_rabbitmq:rabbitmq
      - app_mailer:mail
      - app_ldap:ldap
    networks:
      - app_external_network
      - app_internal_network
    volumes:
      # For PROD
      - ${APP_HOME}/html/:/var/www/html
      # If you want, you can sync time & timezone with host
      #- /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - SF_PROD=true
      - APP_ENV=prod
      - SF_CLEAR_CACHE=true
      - SHELL_VERBOSITY=3
      # Admin configuration
      - SF_ADMIN_LOGIN=${APP_ADMIN_LOGIN}
      - SF_ADMIN_EMAIL=${APP_ADMIN_EMAIL}
      - SF_ADMIN_PASSWD=${APP_ADMIN_PASSWD}
      # Database configuration
      - SF_DB_TYPE=postgresql
      - SF_DB_VERSION=${APP_DB_VERSION}
      - SF_DB_OPTIONS=&charset=utf8
      - SF_DB_HOST=database
      - SF_DB_PORT=5432
      - SF_DB_NAME=${APP_DB_NAME}
      - SF_DB_USER=${APP_DB_USER}
      - SF_DB_PASSWORD=${APP_DB_PASSWD}
      # Normally generated by entrypoint at runtime
      - DATABASE_URL=postgresql://${APP_DB_USER}:${APP_DB_PASSWD}@database:5432/${APP_DB_NAME}?serverVersion=${APP_DB_VERSION}
      # Mail configuration
      - SF_MAIL_TRANSPORT=smtp
      - SF_MAIL_HOST=mail
      - SF_MAIL_PORT=1025
      - SF_MAIL_USER=${APP_SMTP_USER}
      - SF_MAIL_PASSWORD=${APP_SMTP_PASSWD}
      - MAILER_FROM=${APP_MAILER_FROM}
      # Normally generated by entrypoint at runtime
      - MAILER_DSN=smtp://mail:1025
      # Rabbit configuration
      - SF_RABBIT_TRANSPORT=amqp
      - SF_RABBIT_HOST=rabbitmq
      - SF_RABBIT_PORT=5672
      - SF_RABBIT_USER=${APP_RABBIT_USER}
      - SF_RABBIT_PASSWORD=${APP_RABBIT_PASSWD}
      # Normally generated by entrypoint at runtime
      - MESSENGER_TRANSPORT_DSN=amqp://${APP_RABBIT_USER}:${APP_RABBIT_PASSWD}@rabbitmq:5672/%2f/messages
      # JWT passphrase. If not defined, container will generate passphrase and keys on startup
      - JWT_PASSPHRASE=${APP_JWT_PASSPHRASE}
      # Custom encryptor configuration
      - ENCRYPTOR_KEY=${APP_ENCRYPTOR_KEY}
      # LDAP Authentication configuration
      - LDAP_AUTH_ENABLED=${APP_LDAP_AUTH_ENABLED}
      - LDAP_AUTH_HOST=ldap
      - LDAP_AUTH_PORT=10389
      - LDAP_AUTH_ENCRYPTION=none
      - LDAP_AUTH_IS_AD=0
      - LDAP_AUTH_AD_DOMAIN=${APP_LDAP_AUTH_AD_DOMAIN}
      - LDAP_AUTH_BASE_DN=${APP_LDAP_AUTH_BASE_DN}
      - LDAP_AUTH_USER_QUERY=(objectClass=inetOrgPerson)
      - LDAP_AUTH_USERNAME_ATTRIBUTE=uid
      - LDAP_AUTH_EMAIL_ATTRIBUTE=mail
      - LDAP_BIND_DN=${APP_LDAP_BIND_DN}
      - LDAP_BIND_SECRET=${APP_LDAP_BIND_SECRET}
      # Paypal configuration
      - PAYPAL_CLIENT_ID=${APP_PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${APP_PAYPAL_CLIENT_SECRET}
      - PAYPAL_CLIENT_ENV=${APP_PAYPAL_CLIENT_ENV}
      # Application Public URLs
      - SF_SERVER_PUBLIC_URL=${APP_PUBLIC_URL}
      - SF_WEBSITE_PUBLIC_URL=${APP_PUBLIC_URL}
      - SF_FACEBOOK_URL=#
      - SF_TWITTER_URL=#
      - SF_LINKEDIN_URL=#
      - SF_YOUTUBE_URL=#
      # Google Analytics
      - SF_GOOGLE_ANALYTICS_ID=#
      # Matomo
      - SF_MATOMO_URL=#
      - SF_MATOMO_SITE_ID=0
      - SF_MATOMO_SCRIPT_URL=#
      # PHP configuration
      - PHP_MEMORY_LIMIT=1024M
      - PHP_INI_DATE_TIMEZONE=${APP_TIMEZONE}
      # Wait for it...
      - WAIT_FOR=database:5432

  app_messenger:
    image: ${IMAGE_NAME}
    #container_name: app_messenger
    # Stop messenger after 10 messages or timeout (6 hours)
    command: php bin/console messenger:consume async -vv --limit=10 --memory-limit=128M --time-limit=21600
    restart: unless-stopped
    scale: 4
    depends_on:
      app_backend:
        condition: service_started
      app_mailer:
        condition: service_started
      app_db:
        condition: service_healthy
      app_rabbitmq:
        condition: service_started
    links:
      - app_backend:backend
      - app_db:database
      - app_rabbitmq:rabbitmq
      - app_mailer:mail
      - app_ldap:ldap
    networks:
      - app_external_network
      - app_internal_network
    volumes_from:
      - app_backend
    volumes:
      # For PROD
      - ${APP_HOME}/html/:/var/www/html
      # If you want, you can sync time & timezone with host
      #- /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - SF_PROD=true
      - APP_ENV=prod
      - SF_CLEAR_CACHE=true
      - SF_INIT_DB=true
      - SHELL_VERBOSITY=3
      # Admin configuration
      - SF_ADMIN_LOGIN=${APP_ADMIN_LOGIN}
      - SF_ADMIN_EMAIL=${APP_ADMIN_EMAIL}
      - SF_ADMIN_PASSWD=${APP_ADMIN_PASSWD}
      # Database configuration
      - SF_DB_TYPE=postgresql
      - SF_DB_VERSION=${APP_DB_VERSION}
      - SF_DB_OPTIONS=&charset=utf8
      - SF_DB_HOST=database
      - SF_DB_PORT=5432
      - SF_DB_NAME=${APP_DB_NAME}
      - SF_DB_USER=${APP_DB_USER}
      - SF_DB_PASSWORD=${APP_DB_PASSWD}
      # Normally generated by entrypoint at runtime
      - DATABASE_URL=postgresql://${APP_DB_USER}:${APP_DB_PASSWD}@database:5432/${APP_DB_NAME}?serverVersion=${APP_DB_VERSION}
      # Mail configuration
      - SF_MAIL_TRANSPORT=smtp
      - SF_MAIL_HOST=mail
      - SF_MAIL_PORT=1025
      - SF_MAIL_USER=${APP_SMTP_USER}
      - SF_MAIL_PASSWORD=${APP_SMTP_PASSWD}
      - MAILER_FROM=${APP_MAILER_FROM}
      # Normally generated by entrypoint at runtime
      - MAILER_DSN=smtp://mail:1025
      # Rabbit configuration
      - SF_RABBIT_TRANSPORT=amqp
      - SF_RABBIT_HOST=rabbitmq
      - SF_RABBIT_PORT=5672
      - SF_RABBIT_USER=${APP_RABBIT_USER}
      - SF_RABBIT_PASSWORD=${APP_RABBIT_PASSWD}
      # Normally generated by entrypoint at runtime
      - MESSENGER_TRANSPORT_DSN=amqp://${APP_RABBIT_USER}:${APP_RABBIT_PASSWD}@rabbitmq:5672/%2f/messages
      # JWT passphrase. If not defined, container will generate passphrase and keys on startup
      - JWT_PASSPHRASE=${APP_JWT_PASSPHRASE}
      # Custom encryptor configuration
      - ENCRYPTOR_KEY=${APP_ENCRYPTOR_KEY}
      # LDAP Authentication configuration
      - LDAP_AUTH_ENABLED=${APP_LDAP_AUTH_ENABLED}
      - LDAP_AUTH_HOST=ldap
      - LDAP_AUTH_PORT=10389
      - LDAP_AUTH_ENCRYPTION=none
      - LDAP_AUTH_IS_AD=0
      - LDAP_AUTH_AD_DOMAIN=${APP_LDAP_AUTH_AD_DOMAIN}
      - LDAP_AUTH_BASE_DN=${APP_LDAP_AUTH_BASE_DN}
      - LDAP_AUTH_USER_QUERY=(objectClass=inetOrgPerson)
      - LDAP_AUTH_USERNAME_ATTRIBUTE=uid
      - LDAP_AUTH_EMAIL_ATTRIBUTE=mail
      - LDAP_BIND_DN=${APP_LDAP_BIND_DN}
      - LDAP_BIND_SECRET=${APP_LDAP_BIND_SECRET}
      # Paypal configuration
      - PAYPAL_CLIENT_ID=${APP_PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${APP_PAYPAL_CLIENT_SECRET}
      - PAYPAL_CLIENT_ENV=${APP_PAYPAL_CLIENT_ENV}
      # Application Public URLs
      - SF_SERVER_PUBLIC_URL=${APP_PUBLIC_URL}
      - SF_WEBSITE_PUBLIC_URL=${APP_PUBLIC_URL}
      - SF_FACEBOOK_URL=#
      - SF_TWITTER_URL=#
      - SF_LINKEDIN_URL=#
      - SF_YOUTUBE_URL=#
      # PHP configuration
      - PHP_MEMORY_LIMIT=256M
      - PHP_INI_DATE_TIMEZONE=${APP_TIMEZONE}
      # Wait for it...
      - WAIT_FILE=app,db-migrations
      - WAIT_FOR=rabbitmq:5672,mail:1025

  app_cron:
    image: ${IMAGE_NAME}
    container_name: app_cron
    command: crond -f -l 8
    #restart: always
    depends_on:
      app_backend:
        condition: service_started
      app_mailer:
        condition: service_started
      app_db:
        condition: service_healthy
      app_rabbitmq:
        condition: service_started
    links:
      - app_db:database
      - app_rabbitmq:rabbitmq
      - app_mailer:mail
      - app_ldap:ldap
    networks:
      - app_external_network
      - app_internal_network
    volumes_from:
      - app_backend
    volumes:
      - ${APP_HOME}/cron/:/var/log
      # If you want, you can sync time & timezone with host
      #- /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - SF_PROD=true
      - APP_ENV=prod
      - SF_CLEAR_CACHE=true
      - SHELL_VERBOSITY=3
      # Admin configuration
      - SF_ADMIN_LOGIN=${APP_ADMIN_LOGIN}
      - SF_ADMIN_EMAIL=${APP_ADMIN_EMAIL}
      - SF_ADMIN_PASSWD=${APP_ADMIN_PASSWD}
      # Database configuration
      - SF_DB_TYPE=postgresql
      - SF_DB_VERSION=${APP_DB_VERSION}
      - SF_DB_OPTIONS=&charset=utf8
      - SF_DB_HOST=database
      - SF_DB_PORT=5432
      - SF_DB_NAME=${APP_DB_NAME}
      - SF_DB_USER=${APP_DB_USER}
      - SF_DB_PASSWORD=${APP_DB_PASSWD}
      # Normally generated by entrypoint at runtime
      - DATABASE_URL=postgresql://${APP_DB_USER}:${APP_DB_PASSWD}@database:5432/${APP_DB_NAME}?serverVersion=${APP_DB_VERSION}
      # Mail configuration
      - SF_MAIL_TRANSPORT=smtp
      - SF_MAIL_HOST=mail
      - SF_MAIL_PORT=1025
      - SF_MAIL_USER=${APP_SMTP_USER}
      - SF_MAIL_PASSWORD=${APP_SMTP_PASSWD}
      - MAILER_FROM=${APP_MAILER_FROM}
      # Normally generated by entrypoint at runtime
      - MAILER_DSN=smtp://mail:1025
      # Rabbit configuration
      - SF_RABBIT_TRANSPORT=amqp
      - SF_RABBIT_HOST=rabbitmq
      - SF_RABBIT_PORT=5672
      - SF_RABBIT_USER=${APP_RABBIT_USER}
      - SF_RABBIT_PASSWORD=${APP_RABBIT_PASSWD}
      # Normally generated by entrypoint at runtime
      - MESSENGER_TRANSPORT_DSN=amqp://${APP_RABBIT_USER}:${APP_RABBIT_PASSWD}@rabbitmq:5672/%2f/messages
      # JWT passphrase. If not defined, container will generate passphrase and keys on startup
      - JWT_PASSPHRASE=${APP_JWT_PASSPHRASE}
      # Custom encryptor configuration
      - ENCRYPTOR_KEY=${APP_ENCRYPTOR_KEY}
      # LDAP Authentication configuration
      - LDAP_AUTH_ENABLED=${APP_LDAP_AUTH_ENABLED}
      - LDAP_AUTH_HOST=ldap
      - LDAP_AUTH_PORT=10389
      - LDAP_AUTH_ENCRYPTION=none
      - LDAP_AUTH_IS_AD=0
      - LDAP_AUTH_AD_DOMAIN=${APP_LDAP_AUTH_AD_DOMAIN}
      - LDAP_AUTH_BASE_DN=${APP_LDAP_AUTH_BASE_DN}
      - LDAP_AUTH_USER_QUERY=(objectClass=inetOrgPerson)
      - LDAP_AUTH_USERNAME_ATTRIBUTE=uid
      - LDAP_AUTH_EMAIL_ATTRIBUTE=mail
      - LDAP_BIND_DN=${APP_LDAP_BIND_DN}
      - LDAP_BIND_SECRET=${APP_LDAP_BIND_SECRET}
      # Paypal configuration
      - PAYPAL_CLIENT_ID=${APP_PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${APP_PAYPAL_CLIENT_SECRET}
      - PAYPAL_CLIENT_ENV=${APP_PAYPAL_CLIENT_ENV}
      # Application Public URLs
      - SF_SERVER_PUBLIC_URL=${APP_PUBLIC_URL}
      - SF_WEBSITE_PUBLIC_URL=${APP_PUBLIC_URL}
      - SF_FACEBOOK_URL=#
      - SF_TWITTER_URL=#
      - SF_LINKEDIN_URL=#
      - SF_YOUTUBE_URL=#
      # PHP configuration
      - PHP_MEMORY_LIMIT=256M
      - PHP_INI_DATE_TIMEZONE=${APP_TIMEZONE}
      # Wait for it...
      - WAIT_FILE=app,db-migrations
      - WAIT_FOR=database:5432,mail:1025

  app_db:
    image: postgres:${APP_DB_VERSION}-alpine
    container_name: app_db
    restart: always
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${APP_DB_USER}", "-d", "${APP_DB_NAME}"]
    expose:
      - '5432'
    ports:
      - "55432:5432"
    networks:
      - app_internal_network
    volumes:
      - ${APP_HOME}/db/data/:/var/lib/postgresql/data
      # If you want, you can sync time & timezone with host
      #- /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - POSTGRES_DB=${APP_DB_NAME}
      - POSTGRES_USER=${APP_DB_USER}
      - POSTGRES_PASSWORD=${APP_DB_PASSWD}

  app_rabbitmq:
    image: rabbitmq:3-alpine
    hostname: app_rabbitmq
    container_name: app_rabbitmq
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      timeout: 5s
      retries: 1
    mem_limit: 768M
    memswap_limit: 1024M
    expose:
      - '5672'
    networks:
      - app_internal_network
    # If you want, you can sync time & timezone with host
    #volumes:
    #  - /etc/localtime:/etc/localtime:ro
    #  - /etc/timezone:/etc/timezone:ro
    environment:
      - RABBITMQ_DEFAULT_USER=${APP_RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${APP_RABBIT_PASSWD}
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=50%

#  # TODO ELK for looking through logs
#  app_elasticsearch:
#    container_name: app_elasticsearch
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
#    environment:
#      discovery.type: "single-node"
#    ports:
#      - "9200:9200"
#    networks:
#      app_elk_network:
#        aliases:
#          - "elasticsearch"
#
#  app_logstash:
#    container_name: app_logstash
#    image: docker.elastic.co/logstash/logstash:7.10.2
#    depends_on:
#      - app_elasticsearch
#    volumes:
#      - ./docker/logstash/patterns:/usr/share/logstash/pipeline/patterns:cached
#      - ./docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:cached
#      - ${APP_HOME}/html/var/log:/var/www/symfony/var/log:cached
#      - ${APP_HOME}/nginx/logs:/var/log/nginx:cached
#      - ${APP_HOME}/cron/:/var/log/cron:cached
#    networks:
#      - app_elk_network
#
#  app_kibana:
#    container_name: app_kibana
#    depends_on:
#      - app_elasticsearch
#    image: docker.elastic.co/kibana/kibana:7.10.2
#    environment:
#      - SERVER_NAME=localhost
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    networks:
#        - app_elk_network
#    ports:
#        - "5601:5601"

  # Test services (do not use in production)

  # https://docs.docker.com/docker-hub/builds/automated-testing/
  sut:
    build:
      context: ./docker/test
      dockerfile: Dockerfile
    command: sh /docker_test.sh
    networks:
      - app_internal_network
      - app_external_network
    depends_on:
      app_backend:
        condition: service_started
    environment:
      - DOCKER_TEST_CONTAINER=app_backend
      - DOCKER_WEB_CONTAINER=app_backend
    volumes_from:
      - app_backend
    # If you want, you can sync time & timezone with host
    #volumes:
    #  - /etc/localtime:/etc/localtime:ro
    #  - /etc/timezone:/etc/timezone:ro

  app_mailer:
    image: sj26/mailcatcher:latest
    hostname: app_mailer
    container_name: app_mailer
    restart: always
    expose:
      - 1025
    ports:
      - "1025:1025"
      - "1080:1080"
    networks:
      - app_external_network
      - app_internal_network
    # If you want, you can sync time & timezone with host
    #volumes:
    #  - /etc/localtime:/etc/localtime:ro
    #  - /etc/timezone:/etc/timezone:ro

  app_ldap:
    image: rroemhild/test-openldap:2.1
    container_name: app_ldap
    hostname: app_ldap
    expose:
      - '10389'
      - '10636'
    #ports:
    #  - "10389:10389"
    #  - "10636:10636"
    networks:
      - app_internal_network
    #volumes:
    #  - ${APP_HOME}/ldap/:/var/lib/ldap/
    #  # If you want, you can sync time & timezone with host
    #  #- /etc/localtime:/etc/localtime:ro
    #  #- /etc/timezone:/etc/timezone:ro
