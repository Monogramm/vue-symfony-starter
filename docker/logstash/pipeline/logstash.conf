input {
  file {
    type => "nginx_access"
    path => "/var/log/nginx/app_backend_web.access.log"
    start_position => beginning
  }
  file {
    type => "nginx_error"
    path => "/var/log/nginx/app_backend_web.error.log"
    start_position => beginning
  }
  file {
    type => "symfony_dev"
    path => "/var/www/symfony/var/log/dev.log"
    start_position => beginning
  }
  file {
    type => "symfony_prod"
    path => "/var/www/symfony/var/log/prod.log"
    start_position => beginning
  }
}

filter {
  if [type] == "nginx_access" {
    grok {
      patterns_dir => ["/usr/share/logstash/pipeline/patterns"]
      match => { "message" => ["%{NGINXACCESS}"] }
    }
    date {
      match => [ "[nginx][access][timestamp]", "dd/MMM/YYYY:H:m:s Z" ]
      remove_field => "[nginx][access][timestamp]"
    }
    useragent {
      source => "[nginx][access][agent]"
      target => "[nginx][access][user_agent]"
      remove_field => "[nginx][access][agent]"
    }
    geoip {
      source => "[nginx][access][remote_ip]"
    }
  }
  else if [type] == "nginx_error" {
    grok {
      patterns_dir => ["/usr/share/logstash/pipeline/patterns"]
      match => { "message" => ["%{NGINXERROR}"] }
    }
    date {
      match => [ "[nginx][error][timestamp]", "YYYY/MM/dd H:m:s" ]
      remove_field => "[nginx][error][timestamp]"
    }
  }
  else if [type] in ["symfony_dev", "symfony_prod"] {
    grok {
      patterns_dir => "/usr/share/logstash/pipeline/patterns"
      match => { "message" => "%{SYMFONY}"}
    }
    date {
      match => [ "[symfony][timestamp]", "YYYY-MM-dd :H:m:s" ]
      remove_field => "[symfony][timestamp]"
    }
    geoip {
      source => "[symfony][request][ip]"
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "app-logstash-%{+YYYY.MM.dd}"
    document_type => "app_logs"
    manage_template => false
    http_compression => true
  }
}
