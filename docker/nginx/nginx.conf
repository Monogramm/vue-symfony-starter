upstream php-handler {
	server backend:9000;
}

server {
	listen 80;
	listen [::]:80;

	# make sure outgoing links don't show the URL to the origin
	add_header Referrer-Policy origin;
	root /var/www/html/public;
	index index.php;
	try_files $uri $uri/ =404;

	error_log /var/logs/nginx/app_backend_web.error.log debug;
	access_log /var/logs/nginx/app_backend_web.access.log;
	rewrite_log on;

	location / {
		# try to serve file directly, fallback to index.php
		try_files $uri /index.php$is_args$args;
	}

	## DEV
	location ~ ^/(index_dev|config)\.php(/|$) {
		# regex to split $uri to $fastcgi_script_name and $fastcgi_path
		fastcgi_split_path_info ^(.+\.php)(/.+)$;

		# Check that the PHP script exists before passing it
		try_files $fastcgi_script_name =404;

		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_param HTTP_PROXY ""; # prohibit httpoxy: https://httpoxy.org/
		fastcgi_pass php-handler;
	}

	## PROD
	location ~ ^/index\.php(/|$) {
		# regex to split $uri to $fastcgi_script_name and $fastcgi_path
		fastcgi_split_path_info ^(.+\.php)(/.+)$;

		# Check that the PHP script exists before passing it
		try_files $fastcgi_script_name =404;

		# optionally set the value of the environment variables used in the application
		# fastcgi_param APP_ENV prod;
		# fastcgi_param APP_SECRET <app-secret-id>;
		# fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_param HTTP_PROXY ""; # prohibit httpoxy: https://httpoxy.org/
		fastcgi_pass php-handler;

		# Prevents URIs that include the front controller. This will 404:
		# http://domain.tld/app.php/some-path
		# Remove the internal directive to allow URIs like this
		internal;
	}

	## deny access to all other .php files
	location ~* ^.+\.php$ {
		deny all;
		return 403;
	}

	## disable all access to the following directories
	#location ~ /(config|tmp|core|lang) {
	#	deny all;
	#	return 403; # replace with 404 to not show these directories exist
	#}

	location ~ /\.ht {
		deny all;
		return 403;
	}

	location ~ js/container_.*_preview\.js$ {
		expires off;
		add_header Cache-Control 'private, no-cache, no-store';
	}

	location ~ \.(gif|ico|jpg|png|svg|js|css|htm|html|mp3|mp4|wav|ogg|avi|ttf|eot|woff|woff2|json)$ {
		allow all;
		## Cache images,CSS,JS and webfonts for an hour
		## Increasing the duration may improve the load-time, but may cause old files to show after an upgrade
		expires 1h;
		add_header Pragma public;
		add_header Cache-Control "public";
	}

	location ~ /(libs|vendor|plugins|misc/user) {
		deny all;
		return 403;
	}

	## properly display textfiles in root directory
	location ~/(.*\.md|LEGALNOTICE|LICENSE) {
		default_type text/plain;
	}
}

# vim: filetype=nginx